{"name":"City72","tagline":"","body":"Included in this guide:\r\n\r\n  * [Production Deployment](#production_deployment) Instructions\r\n  * [Development Environment Setup](#development-environment-setup) Instructions\r\n\r\n# Production Deployment \r\n\r\n## Prerequisites\r\n\r\n* **Git** (For more information read [Getting Started with Git](http://git-scm.com/book/en/Getting-Started-Installing-Git).)\r\n\r\n### Step By Step Guide\r\n\r\n#### Obtain a copy of the application\r\n\r\nUsing git, clone the github repository to obtain a local copy on your computer.\r\n\r\n```sh\r\n  $ git clone git@github.com:city72/city-72.git\r\n```\r\n\r\nThis will create a folder named `city-72`. This guide will refer to the folder as your \"project folder\".\r\n\r\n#### Setup Heroku\r\n\r\nFollow these steps:\r\n\r\n  1. Create a [heroku account](http://www.heroku.com) (if you don't already have one)\r\n  2. Install the Heroku Toolbelt on your computer & login\r\n      * Step 2 and 3 of the [heroku quickstart guide](https://devcenter.heroku.com/articles/quickstart)\r\n  3. Add your credit card information to your heroku account. If you are just testing the site you can choose free options below. NOTE: The free version of the site on Heroku is not recommended for the public launch of your City72 site that may experience a high volume of traffic during an emergency. \r\n\r\n\r\n#### Configure an application on Heroku with 2 dynos\r\n\r\nFirst, go to your heroku account and create an application to be used for the project. When asked for the number of `web dynos` to be used in your application select 2. Two dynos is the recommended setting for your application in order to keep the app reliable and responsive to traffic. \r\n\r\nFor testing purposes, you can choose an application with no extra dynos. NOTE: Sites with no extra dynos \"go to sleep\" and can be slow to wake up. So, this free level of service is not appropriate for the public launch of your site. For the full launch of your site, create an application with at least two dynos.\r\n\r\n#### Configure the Heroku App for your project\r\n\r\nGo to you project folder, and run the following command:\r\n\r\n```sh\r\n  $ git remote add heroku git@heroku.com:YOURAPPNAME.git\r\n```\r\n\r\n(In your heroku account, choose your app's settings, and you will get the Git URL, from the info section)\r\n\r\n#### Install add-ons - Production (adds $100/month)\r\n\r\nIf you would prefer to test the site for free use the add-on instructions in the next section. NOTE: If you know you will launch this site to the public use these paid add-ons.\r\n\r\n**postgresql, two options:**\r\n\r\n* **postgresql (more robust option):** This add-on has cost of $50 per month. It's is the database in your application.\r\n \r\n   ```sh\r\n     $ heroku addons:add heroku-postgresql:standard-yanari -a YOURAPPNAME\r\n   ```\r\n\r\n* **postgresql (free/hobby option):** if you would like to test the app for free you can install the \"hobby\" version of postgres instead. Not recommended for production loads. \r\n \r\n   ```sh\r\n     $ heroku addons:add heroku-postgresql -a YOURAPPNAME\r\n   ```\r\n\r\n\r\n**pg-backups:** This add-on is free. It creates backups of your database.\r\n\r\n```sh\r\n  $ heroku addons:add pgbackups:auto-week -a YOURAPPNAME\r\n```\r\n\r\n**sengrid:** This add-on is free. It's used to send emails from your application.\r\n\r\n```sh\r\n  $ heroku addons:add sendgrid -a YOURAPPNAME\r\n```\r\n\r\n**newrelic:** This add-on is free. It monitors your application performance\r\n\r\n```sh\r\n  $ heroku addons:add newrelic:stark -a YOURAPPNAME\r\n```\r\n\r\n**cloudinary, two options:** \r\n\r\n* **cloudinary (more robust option)** This add-on has a cost of $50 per month. It is used to store and host images in your application.\r\n\r\n   ```sh\r\n    $ heroku addons:add cloudinary:bronze -a YOURAPPNAME\r\n   ```\r\n* **cloudinary (free option)** This version of the add-on is free. Only use the free version of this add-on for testing purposes.\r\n \r\n   ```sh\r\n    $ heroku addons:add cloudinary -a YOURAPPNAME\r\n   ```\r\n\r\n\r\n\r\n#### Configure the recover password host redirection (example: YOURAPPNAME.herokuapp.com)\r\n\r\n```sh\r\n $ heroku config:set EMAIL_REDIRECT_HOST=YOURAPPNAME.herokuapp.com\r\n```\r\n\r\nThis variable, configures the domain to be used within the emails sent from your application. You should configure it to use the domain you have.\r\n\r\n\r\n#### Deploy\r\n\r\nFinally you are now able to do a deploy of the application.\r\n\r\nDo:\r\n```sh\r\n $ git push heroku master\r\n $ heroku run bundle exec rake db:setup            # this creates database schema & prepopulates basic data\r\n $ heroku run bundle exec rake city72:populate     # this populates data to the database\r\n```\r\n\r\nNow you should be able to enter you application.\r\n\r\nGo to `http://YOURAPPNAME.herokuapp.com/` to see your new City72 site.\r\n\r\n  \r\n#### FINAL STEP: Update your username and password via the Content Editor\r\n\r\nYour site was installed with a default username and password (these are set in the db/seeds.rb file). To login to your new site's content editor go to your app and login\r\n\r\n`http://YOURAPPNAME.herokuapp.com/cms`\r\n\r\nThe default username and password are:\r\n\r\nadmin@example.com\r\n\r\npassword\r\n\r\nOnce you login change the email to your email address and then change the password.\r\n\r\n\r\n\r\n\r\n---\r\n  \r\n\r\n# Development Environment Setup\r\n\r\nIn most cases you will not need to setup a development environment for this application. The only reason to go through the following steps would be if you wanted to customize your site beyond what you can set with the Content Editor.\r\n\r\n## Prerequisites\r\n\r\nTo setup the application you will need:\r\n\r\n* PostgreSQL database\r\n* Ruby 1.9.3-p448\r\n* Bundler gem\r\n* Bower\r\n\r\n\r\n### PostgreSQL installation\r\n\r\n#### Linux\r\n\r\n    $ sudo apt-get -y install postgresql\r\n\r\n#### Mac OS X\r\n\r\n    $ brew install postgresql\r\n\r\n### Ruby Installation\r\n\r\n#### Rbenv\r\n\r\nTo install ruby, it is necessary to have *rbenv* installed. This can be installed following the steps described in [rbenv's Github Repository](https://github.com/sstephenson/rbenv), in the [Installation Section](https://github.com/sstephenson/rbenv#installation).\r\n\r\n#### Ruby 1.9.3-p448\r\n\r\nWhen rbenv is already installed, go to the project's root folder, and run the following command\r\n\r\n```sh\r\n $ rbenv install\r\n```\r\n\r\n### Bundler gem\r\nIn order the manage the project dependencies, it is necessary to have installed *bundler*.\r\n\r\n```sh\r\n $ gem install bundler\r\n```\r\n\r\n### Bower\r\nTo manage the client-side js dependencies, it is necessary to have installed *bower*. *Bower* depends on *node.js*, so if it is not installed yet, install it with *nvm*, following these instructions: [NVM - Installation guide](https://github.com/creationix/nvm#installation).\r\n\r\nHaving *node.js* installed, run the following command to install *bower*:\r\n\r\n```sh\r\nnpm install -g bower\r\n```\r\n\r\n## Development environment\r\n\r\nBefore running the app, the following steps should be performed.\r\n* Create the database user for the application\r\n* Install the application dependencies\r\n* Create the database\r\n* Download the client-side dependecies\r\n\r\n### Create the database user for the application\r\n\r\n```sh\r\ncreateuser -P -s city72\r\n```\r\nAssign the word *city72* as password too.\r\n\r\nLinux users should run the above command as postgres user (`sudo su postgres`).\r\n\r\n### Install the application dependencies\r\n\r\n```sh\r\nbundle install\r\n```\r\n\r\n### Create the database\r\n\r\n```sh\r\nbundle exec rake db:setup\r\n```\r\n\r\n### Download the client-side dependencies\r\n\r\n```sh\r\nbower install\r\n```\r\n\r\n## Run the application locally\r\nWith all the prerequisites and the development environment ready. Just run the app, with the following command:\r\n\r\n```sh\r\nbundle exec rails s\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}